name: http-probing
desc: Running HTTP fingerprint technology and response with the supplied inputs

report:
  final:
    - "{{Output}}/fingerprint/{{Workspace}}-technologies.txt"
    - "{{Output}}/screenshot/{{Workspace}}-screenshots/screenshot-{{Workspace}}.html"

params:
  - inputFile: "{{Target}}"
  - httpFile: "{{Output}}/fingerprint/http-{{Workspace}}.txt"
  - httpThreads: "{{ threads * 10 }}"
  - screenThreads: "{{ threads / 2 }}"
  - enableSreenshot: "false"
  - httpTimeout: "10"
  - defaultUA: "User-Agent: Mozilla/5.0 (compatible; Osmedeus/v4; +https://github.com/j3ssie/osmedeus)"

pre_run:
  - CreateFolder("{{Output}}/fingerprint")
  - CreateFolder("{{Output}}/screenshot")

steps:
  - commands:
      - "echo {{inputFile}} | {{Binaries}}/httpx -nf -timeout {{httpTimeout}} -silent -t {{httpThreads}} >> {{httpFile}}"
      - "cat {{inputFile}} | {{Binaries}}/httpx -nf -timeout {{httpTimeout}} -silent -t {{httpThreads}} >> {{httpFile}}"
    scripts:
      - SortU("{{httpFile}}")

  - required:
      - "{{Binaries}}/httpx"
      - "{{httpFile}}"
    commands:
      - cat {{httpFile}} | {{Binaries}}/httpx -H '{{defaultUA}}' -timeout {{httpTimeout}} -t {{httpThreads}} -no-fallback -no-color -silent -json -title -favicon -hash sha256 -jarm -tech-detect -status-code -cdn -tls-grab -ztls -vhost -follow-host-redirects -include-chain -store-response -store-response-dir {{Output}}/fingerprint/raw-data >> {{Output}}/fingerprint/{{Workspace}}-http-overview.txt
    scripts:
      # make a header for csv file
      - ExecCmd("echo 'URL, Title, Tech, Response Hash' > {{Output}}/fingerprint/{{Workspace}}-raw-overview.txt")
      - CleanJSONHttpx('{{Output}}/fingerprint/{{Workspace}}-http-overview.txt', '{{Output}}/fingerprint/{{Workspace}}-raw-overview.txt')
      - BeautifyCSV('{{Output}}/fingerprint/{{Workspace}}-raw-overview.txt', '{{Output}}/fingerprint/beautify-{{Workspace}}-http.txt')
      - Cat('{{Output}}/probe/beautify-{{Workspace}}-technologies.txt')

  - required:
      - "{{Binaries}}/httpx"
      - "{{httpFile}}"
    commands:
      - "cat {{httpFile}} | {{Binaries}}/httpx -t {{screenThreads}} -no-color -silent -screenshot -screenshot-timeout {{screenTimeout}} -json -store-response-dir {{Output}}/screenshot/{{Workspace}}-screenshots/ > /dev/null 2>&1"
    scripts:
      - ExecCmd("mv {{Output}}/screenshot/{{Workspace}}-screenshots/screenshot.html {{Output}}/screenshot/{{Workspace}}-screenshots/screenshot-{{Workspace}}.html")
      - ExecCmd("ls {{Output}}/screenshot/ > {{Output}}/screenshot/number-of-screenshot.txt")

  - scripts:
      - GenMarkdownReport("{{Data}}/markdown/simple-template.md", "{{Output}}/summary.html")
