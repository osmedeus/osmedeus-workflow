name: portscan
desc: Quick port scan for all port

report:
  final:
    - "{{Output}}/portscan/open-ports.txt"
    - "{{Output}}/portscan/{{Workspace}}-detail.txt"
    - "{{Output}}/portscan/nmap-raw-{{Workspace}}.txt"
    - "{{Output}}/portscan/{{Workspace}}-screenshots/screenshot-{{Workspace}}.html"
    - "{{Output}}/portscan/{{Workspace}}-http.txt"

pre_run:
  - CreateFolder("{{Output}}/portscan")

# only run for top 1k port
# edit via osmedeus scan -P 'ports=0-65535' -P 'rate=5000' ...
params:
  - nonCdnFile: "{{Output}}/ipspace/{{Workspace}}-noncdn.txt"
  # portscan
  - ports: "0-65535"
  - rateRustScan: "{{ threads * 400 }}"
  - httpThreads: "{{ threads * 8 }}"
  - screenThreads: "{{ threads * 2}}"
  - skipPortScan: "false"

steps:
  # do port scan first
  - required:
      - '{{nonCdnFile}}'
    commands:
      - "{{Binaries}}/rustscan --timeout 3000 -b {{rateRustScan}} --scripts None --range {{ports}} -a {{nonCdnFile}} -g >> {{Output}}/portscan/raw-open-ports.txt"
    scripts:
      - CleanRustScan("{{Output}}/portscan/raw-open-ports.txt", "{{Output}}/portscan/open-ports.txt")

  # detect http running on open ports and service
  - required:
      - "{{Output}}/portscan/open-ports.txt"
      - "{{Output}}/portscan/raw-open-ports.txt"
    commands:
      - "cat {{Output}}/portscan/open-ports.txt | {{Binaries}}/httprobe -c {{httpThreads}} -t 7000 >> {{Output}}/portscan/{{Workspace}}-http.txt"
    scripts:
      - SortU('{{Output}}/portscan/{{Workspace}}-http.txt')


  - required:
      - "{{Binaries}}/httpx"
      - "{{Output}}/portscan/{{Workspace}}-http.txt"
    commands: 
      - "cat {{Output}}/portscan/{{Workspace}}-http.txt | {{Binaries}}/httpx -t {{screenThreads}} -no-color -silent -screenshot -screenshot-timeout {{screenTimeout}} -json -store-response-dir {{Output}}/portscan/{{Workspace}}-screenshots/ > /dev/null 2>&1"
    scripts:
      - ExecCmd("mv {{Output}}/portscan/{{Workspace}}-screenshots/screenshot.html {{Output}}/portscan/{{Workspace}}-screenshots/screenshot-{{Workspace}}.html")
      - ExecCmd("ls {{Output}}/portscan/ > {{Output}}/portscan/number-of-screenshot.txt")

post_run:
  - GenMarkdownReport("{{Data}}/markdown/general-template.md", "{{Output}}/summary.html")
